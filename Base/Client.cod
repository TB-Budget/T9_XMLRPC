class "Реализация вызовов XML-RPC из Турбо 9";
    import classes Conversion;
    import classes Calling;
inclass Public
  --/****if*  Client/EncodeRequest
  --* SUMMARY
  --* Формирует строку XMLRPC запроса
  --* SYNOPSIS
  func EncodeRequest(Method:string;Params:Variant[]):AutoObject;
  --* INPUTS
  --* Method - название вызываемого метода
  --* Params - список параметров
  --* OUTPUTS
  --* Текстовое представление запроса в формате XMLRC
  --* SOURCE
  var root,sub1,sub2,hdr,xReq:AutoObject;
    xReq=AutoObject.Create("Msxml2.DOMDocument.6.0");
    xReq.Async=False;

    --xReq.loadXML('<?xml version="1.0" encoding="windows-1251"?>');
    hdr=xReq.createProcessingInstruction("xml", 'version="1.0" encoding="utf-8"');
    xReq.AppendChild(hdr);

    root=xReq.createElement("methodCall");
    xReq.AppendChild(root);

    sub1=xReq.createElement("methodName");
    root.AppendChild(sub1);

    sub2=xReq.CreateTextNode(Method);
    sub1.AppendChild(sub2);

    sub1=EncodeParams(xReq,Params);
    root.AppendChild(sub1);

    Result = xReq;
  end;
  --****
  --/****if*  Client/ParseResp
  --* SUMMARY
  --* Разбирает пришедший ответ
  --* SYNOPSIS
  func ParseResp(Response:AutoObject):Variant[];
  --* INPUTS
  --* Response - автообъект с ответом
  --* OUTPUTS
  --* Результат выполнения
  --* SOURCE
  var root:AutoObject;
  var sub1,sub2:AutoObject;
  var Params:Variant[];
  var res:Variant;
  var i,j:Integer;
    root=Response.documentElement;--methodResponse
    sub1=root.childNodes;
    for i = 1..sub1.length do
        if Lo(sub1.item(i-1).nodeName)="params" then
            Params=[];
            sub2=sub1.item(i-1).getElementsByTagName("param");
            for j = 1..sub2.length do
                 --                                          value      само содержимое
                 СИС2.Функции.AddInArray(Params,FromXmlRpc(sub2.item(j-1).firstChild.firstChild));
            end;
        elsif Lo(sub1.item(i-1).nodeName)="fault" then
         --ОБРАБОТКА ОШИБОК
         --                              value
         res = FromXmlRpc(sub1.item(i-1).firstChild.firstChild);
         SetError(res.faultCode, res.faultString);
        end;

    end;
    Result = Params;

  end;
  --****

  --/****if*  Client/SimpleCall
  --* SUMMARY
  --* Выполняет XMLRPC вызов на удаленном сервере
  --* SYNOPSIS
  func SimpleCall(URL:string;Method:string;Params:Variant[]):Variant[];
  --* INPUTS
  --* URL - адрес сервера XMLRPC
  --* Method - название вызываемого метода
  --* Params - список параметров
  --* OUTPUTS
  --* Результат выполнения
  --* SOURCE
  var Res:Variant[];
  var xRes:AutoObject;
  var hReq,xReq:AutoObject;
--  var tf:TextFile;
    hReq=AutoObject.Create("Msxml2.XMLHTTP.6.0");
    hReq.open("POST", URL, False);
    hReq.setRequestHeader("Content-Type","text/xml; charset=windows-1251");
    xReq=EncodeRequest(Method, Params);
    --hReq.send(xReq);
    hReq.send(xReq.xml);
    xRes=hReq.responseXML;
--    tf = TextFile.Create('r:\text.xml',fmCreate);
--    tf.write(hReq.responseText);
--    tf.Flush;
    Res=ParseResp(xRes);
    return Res;
  end;
  --****

inobject

end